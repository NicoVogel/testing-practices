section(id="unit-testing")
  h1 Unit testing
  aside(class='notes').
    Unit testing is a skill that takes practice, but is sadly
    hardly addressed in university.

section
  h2 What is unit testing?
  p.
    A practice to test parts of your code quickly.
  aside(class='notes').
    Even tough this statement might seem straight forward at first
    glance, there are multiple nuances to this skill and I will
    outline some of them.

include ./what-to-test.pug
include ./structure.pug

section
  section
    h2 Problem with Mocks
    img(src="img/solitary-test-have-gaps.png")
    aside(class='notes').
      We often test components in isolation by mocking other components out,
      but there is a potential for gaps in the implementation
      To address this issue, there are two patterns that help to mitigate the issue

  section
    h2 Problem with Mocks
    img(src="img/integration-tests-are-duplicative-and-slow.png")
    aside(class='notes').
      To fix that we create integration tests that are slow and difficult to maintain as well as duplicate effort.

section(id="higher-level-test-structures")
  h2 Higher level test structures
  p There are two options I know of:
  ul
    li Contract tests
    li Sociable tests
  aside(class='notes').
    Or you could also call it mindsets.
    Just creating tests is fine, but its still possible that in the end
    your tests succeed, but in production errors come up.
    Following one of these higher level test structures can further
    harden your testing.

    I have only used the "Contract tests" up until now and only recently learned
    of "Sociable tests" and am really interested in the idea.

    You don't need to use any of these approaches and they can even be
    considered "ugly" by some people

include ./contract-tests.pug
include ./sociable-tests.pug
